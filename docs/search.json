[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "harmony_automation",
    "section": "",
    "text": "As I am the main person responsible for data updates for Sears, there can be upwards of 100+ tickets/logs to process on a bi-weekly basis. Some logs can be closed after the update process, while others need to be re-assigned for further processing.\nThe update process has been streamlined to the point that updates can be easily and quickly completed in bulk/batches. Manually closing and re-assigning up to 100+ logs at a time proved to be a tedious hassle, so I created some scripts to automate the process using Selenium Playwright (as of v2.0.1).\nDocumentation",
    "crumbs": [
      "harmony_automation"
    ]
  },
  {
    "objectID": "index.html#in-action-v1",
    "href": "index.html#in-action-v1",
    "title": "harmony_automation",
    "section": "In Action (v1)",
    "text": "In Action (v1)\n\nClosing tickets\n\n\n\nClosing logs\n\n\n\n\nRe-assigning tickets\n\n\n\nRe-assigning logs",
    "crumbs": [
      "harmony_automation"
    ]
  },
  {
    "objectID": "index.html#changelog",
    "href": "index.html#changelog",
    "title": "harmony_automation",
    "section": "Changelog",
    "text": "Changelog\n\n2.0.1\n\nport to Playwright",
    "crumbs": [
      "harmony_automation"
    ]
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "00_core",
    "section": "",
    "text": "setupLogger (name:str='log', serialize:bool=False)\n\nadd handler attached to &lt;name&gt;.log @ trace level and up\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nname\nstr\nlog\nstr\n\n\nserialize\nbool\nFalse\nbool\n\n\nReturns\nNone\n\n\n\n\n\n\n\n\n\n\n loadSerializedLog (log_fp:str, incl_full_record:bool=False,\n                    incl_unix_ts:bool=False)\n\n-&gt; pd.DataFrame\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nlog_fp\nstr\n\nstr\n\n\nincl_full_record\nbool\nFalse\nbool\n\n\nincl_unix_ts\nbool\nFalse\nbool\n\n\nReturns\nDataFrame\n\npd.DataFrame\n\n\n\n\n\n\n\n\n fp (_path:str='', ambiguous_err:bool=True)\n\nFor referencing relative file paths in dev env. Assumes core is always one level down from project root directory.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\n_path\nstr\n\nstr - eg. \"../dat/some_file.csv\" == \"&lt;project_root&gt;/dat/some_file.csv&gt;\"\n\n\nambiguous_err\nbool\nTrue\nbool - if True, will raise exception if path is ambiguous when running docs generation vs dev env\n\n\nReturns\nstr\n\nstr\n\n\n\n\n\n\n\n\n yaml_helper (fpath:str='./config.yaml', mode:str='r',\n              data:Optional[dict]=None)\n\nHelper function to read, write, append to files in yaml format. Checks for duplicate keys if reading or appending.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfpath\nstr\n./config.yaml\nstr\n\n\nmode\nstr\nr\nstr - r / a / w\n\n\ndata\nOptional\nNone\ncannot be None if writing or appending\n\n\nReturns\ndict\n\ndict - data if reading, {‘r’: 0} if writing/appending",
    "crumbs": [
      "00_core"
    ]
  },
  {
    "objectID": "core.html#close-tickets",
    "href": "core.html#close-tickets",
    "title": "00_core",
    "section": "close tickets",
    "text": "close tickets\n\n\nclose_log\n\n close_log (page:playwright.async_api._generated.Page, tkt:str,\n            trk_fp:str, note:str='Done')\n\nClose individual log.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npage\nPage\n\nPage\n\n\ntkt\nstr\n\nstr\n\n\ntrk_fp\nstr\n\nstr\n\n\nnote\nstr\nDone\nstr\n\n\nReturns\nNone\n\n\n\n\n\n\n\n\nclose_all_logs\n\n close_all_logs ()\n\nClose all logs.",
    "crumbs": [
      "00_core"
    ]
  },
  {
    "objectID": "core.html#re-assign-tickets",
    "href": "core.html#re-assign-tickets",
    "title": "00_core",
    "section": "re-assign tickets",
    "text": "re-assign tickets\n\n\nreassign_log\n\n reassign_log (page:playwright.async_api._generated.Page, tkt:str,\n               trk_fp:str, note:str)\n\nReassign individual log.\n\n\n\n\nType\nDetails\n\n\n\n\npage\nPage\nPage\n\n\ntkt\nstr\nstr\n\n\ntrk_fp\nstr\nstr\n\n\nnote\nstr\nstr\n\n\nReturns\nNone\n\n\n\n\n\n\n\nreassign_all_logs\n\n reassign_all_logs ()\n\nRe-assign all logs.",
    "crumbs": [
      "00_core"
    ]
  },
  {
    "objectID": "core.html#add-tickets",
    "href": "core.html#add-tickets",
    "title": "00_core",
    "section": "add tickets",
    "text": "add tickets\n\n\nadd_logs\n\n add_logs (df:pandas.core.frame.DataFrame,\n           page:playwright.async_api._generated.Page)\n\nAdd logs.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\npd.DataFrame - w/ 2 columns: id (Employee #) and note\n\n\npage\nPage\nPage\n\n\nReturns\nNone",
    "crumbs": [
      "00_core"
    ]
  }
]